name: pulumi-preview
description: Run pulumi preview

inputs:
  backend:
    description: pulumi backend url to log in to
    required: false
  no-changes:
    description: fails if any changes is planned
    required: false
    default: "false"
  diff:
    description: show detailed changes diff
    required: false
    default: "true"
  github-token:
    description: github token used to post comments and fetch plugins
    required: false
    default: ${{ github.token }}
  runtime:
    description: pulumi runtime (eg. python, nodejs, go, etc.)
    required: false
    default: python
  runtime-cache:
    description: pulumi runtime package maangere for cache setup (eg. pip, npm, etc.)
    required: false
    default: pip
  runtime-deps-file:
    description: pulumi dependencies file name (eg. requirements.txt for python runtime)
    required: false
    default: requirements.txt
  runtime-version:
    description: pulumi runtime version (eg. '3.12.0' for Python)
    required: false
    default: latest
  stack:
    description: pulumi stack to use
    required: true
  token:
    description: pulumi access token
    required: true
  version:
    description: pulumi version to install
    required: false
    default: latest
  workdir:
    description: change working directory
    required: false
    default: .

runs:
  using: composite
  steps:
    - name: Get latest Python version
      id: python-version
      if: inputs.runtime == 'python' && inputs.runtime-version == 'latest'
      uses: nikaro/actions/get-latest-version@main
      with:
        package: python

    - name: Setup Python
      if: inputs.runtime == 'python'
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: ${{ inputs.runtime-version == 'latest' && steps.python-version.outputs.version || inputs.runtime-version }}
        check-latest: ${{ inputs.runtime-version == 'latest' && 'true' }}
        cache: ${{ inputs.runtime-cache }}

    - name: Setup Node
      if: inputs.runtime == 'nodejs'
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: ${{ inputs.runtime-version }}
        cache: ${{ inputs.runtime-cache }}

    - name: Get latest Go version
      id: go-version
      if: inputs.runtime == 'go' && inputs.runtime-version == 'latest'
      uses: nikaro/actions/get-latest-version@main
      with:
        package: golang/go
        manager: gh-releases-name
        strip-prefix: go

    - name: Setup Go
      if: inputs.runtime == 'go'
      uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
      with:
        go-version: ${{ inputs.runtime-version == 'latest' && steps.go-version.outputs.version || inputs.runtime-version }}
        check-latest: ${{ inputs.runtime-version == 'latest' && 'true' }}

    - name: Setup Pulumi cache
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: |
          ~/.pulumi/
          !~/.pulumi/credentials.json
        key: pulumi-${{ hashFiles(format('{0}/{1}', inputs.workdir, inputs.runtime-deps-file)) }}
        restore-keys: pulumi-

    - name: Preview changes
      uses: pulumi/actions@d79ef3665e6d664f1e29959e0dd40373d922a653 # v5.3.3
      with:
        cloud-url: ${{ inputs.backend }}
        command: preview
        comment-on-pr: true
        comment-on-summary: true
        diff: ${{ inputs.diff }}
        expect-no-changes: ${{ inputs.no-changes }}
        github-token: ${{ inputs.github-token }}
        pulumi-version: ${{ inputs.version != 'latest' && inputs.version || '' }}
        stack-name: ${{ inputs.stack }}
        work-dir: ${{ inputs.workdir }}
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PULUMI_ACCESS_TOKEN: ${{ inputs.token }}
